---
import PageLayout from "../../layouts/PageLayout.astro";
import { fetchApi } from "../../scripts/api";
import { endpoint } from "../../lib/config";
import type { Card } from "../../lib/config";
import type { GetStaticPathsOptions } from "astro";

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const allCards = await fetchApi(endpoint);

  return paginate(allCards, { pageSize: 10 });
}

const { page } = Astro.props;

const allCards = page.data;
const paginationNumbers: Array<string> = Array.from({ length: page.lastPage }, (_, i) => String(i + 1));

interface PageStatus {
  title: string;
  description: string;
}

const pageStatus: PageStatus = {
  title: "名刺一覧",
  description: "JavaScriptのフレームワーク「Astro」の学習のために作ったサイトです"
}
---

<PageLayout title={ pageStatus.title } description={ pageStatus.description }>
  <h1 class="section__title">{ pageStatus.title }<span>（敬称略）</span></h1>
  <ul class="cards">
    {
      allCards.map((card: Card) => (
        <li class="card"><a href={ `/card/${card.id}` }>{ card.name } / { card.company }所属</a></li>
      ))
    }
  </ul>
  <ul class="pagination">
    {
      paginationNumbers.map((pageNumber: string) => {
        return (
          pageNumber === String(page.currentPage) ?
          <li><span>{ pageNumber }</span></li> :
          <li><a href={ `/allcards/${ pageNumber }` }>{ pageNumber }</a></li>
        )
      })
    }
  </ul>
</PageLayout>

<style lang="scss">
  .section__title span {
    font-size: 1rem;
  }

  .cards {
    margin-top: 1.5rem;
  }

  .card + .card {
    margin-top: .5rem;
  }

  .pagination {
    margin-top: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0 .5rem;
  }
</style>